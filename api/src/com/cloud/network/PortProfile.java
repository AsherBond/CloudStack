// Copyright 2012 Citrix Systems, Inc. Licensed under the
// Apache License, Version 2.0 (the "License"); you may not use this
// file except in compliance with the License.  Citrix Systems, Inc.
// reserves all rights not expressly granted by the License.
// You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
// 
// Automatically generated by addcopyright.py at 04/03/2012
package com.cloud.network;

import java.util.ArrayList;
import java.util.List;


/**
 * 
 * - Allocated = null
 * - AccountId = null
 * - DomainId = null
 * 
 * - State = Allocated
 * - AccountId = account owner.
 * - DomainId = domain of the account owner.
 * - Allocated = time it was allocated.
 */
// Do we need to make PortProfile an interface?!!
// And do we need to make this implement/extend
// ControlledEntity?
public class PortProfile {
    
	String ACL;	// String is only a placeholder type, we need to make it a proper Cisco N1KV ACL type.
	
	List<Integer> port_channel = new ArrayList<Integer>();
	
	int vlanId;
	
	int pVlanId;
	
	String NetFlow;	// String is a placeholder!!! Replace with correct netflow type.
	
	String QoS;		// placeholder type!!
	
	String RateLimiting;	// placeholder type!!
	
	String PortSecurity;	// placeholder type!!
	
    long portProfileId;
    
    long accountId;
    
    long domainId;
    
    String portProfileName;
    
    portProfileType portProfileType;
    
    public enum portProfileType {
    	System,
    	Normal
    }
    
    
    /**
     * @return database id.
     */
    public long getId() {
    	return portProfileId;
    }

    public long getAllocatedToAccountId() {
    	return accountId;
    }

    public long getAllocatedInDomainId() {
    	return domainId;
    }
    
    // We'll put in other getter/setter methods for all the other fields too.
    
    PortProfile() {
    	// Do nothing for now.
    	// We probably need to generate a UUID for this portprofile.    	
    	return;
    }

}
