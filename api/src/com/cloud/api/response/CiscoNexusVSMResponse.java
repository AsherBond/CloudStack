// Copyright 2012 Citrix Systems, Inc. Licensed under the
// Apache License, Version 2.0 (the "License"); you may not use this
// file except in compliance with the License.  Citrix Systems, Inc.
// reserves all rights not expressly granted by the License.
// You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
// 
// Automatically generated by addcopyright.py at 04/02/2012
package com.cloud.api.response;

import com.cloud.api.ApiConstants;
import com.cloud.utils.IdentityProxy;
import com.cloud.serializer.Param;
import com.google.gson.annotations.SerializedName;

public class CiscoNexusVSMResponse extends BaseResponse {

    @SerializedName(ApiConstants.EXTERNAL_SWITCH_MGMT_DEVICE_ID) @Param(description="device id of the Cisco N1KV VSM device")
    // Do we need a new table name for this? During discussion with Frank, we thought we could just use the host table.
    private IdentityProxy id = new IdentityProxy("virtual_supervisor_module");

    // A Cisco n1kv vsm could be plumbed in multiple VLANs.. not sure what a physical network id is, so commenting it
    // out for now.
    //@SerializedName(ApiConstants.PHYSICAL_NETWORK_ID) @Param(description="the physical network to which this netscaler device belongs to")
    //private IdentityProxy physicalNetworkId = new IdentityProxy("physical_network");

    // What's a provider for netscaler? Not sure if we need this for n1kv vsm, so commenting it out.
    //@SerializedName(ApiConstants.PROVIDER) @Param(description="name of the provider")
    //private String providerName;
    
    @SerializedName(ApiConstants.EXTERNAL_SWITCH_MGMT_DEVICE_NAME) @Param(description="device name")
    private String deviceName;
    
    // Not sure if we need this but we'll keep it for now.. obviously we would want to know when an N1KV VSM is disabled or something.
    @SerializedName(ApiConstants.EXTERNAL_SWITCH_MGMT_DEVICE_STATE) @Param(description="device state")
    private String deviceState;

    // Don't think we need to track the public interface/private interface of a VSM. We'd just need the ip addr.
    //@SerializedName(ApiConstants.PUBLIC_INTERFACE) @Param(description="the public interface of the load balancer")
    //private String publicInterface;
    
    //@SerializedName(ApiConstants.PRIVATE_INTERFACE) @Param(description="the private interface of the load balancer")
    //private String privateInterface;

    @SerializedName(ApiConstants.IP_ADDRESS) @Param(description="the management IP address of the external Cisco Nexus 1000v Virtual Supervisor Module")
    private String vsmmgmtIpAddress;

    public void setId(long vsmDeviceId) {
        this.id.setValue(vsmDeviceId);
    }

    public void setDeviceName(String deviceName) {
        this.deviceName = deviceName;
    }

    public void setMgmtIpAddress(String ipAddress) {
        this.vsmmgmtIpAddress = ipAddress;
    }
}
