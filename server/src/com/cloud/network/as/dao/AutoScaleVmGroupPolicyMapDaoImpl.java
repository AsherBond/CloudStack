// Copyright 2012 Citrix Systems, Inc. Licensed under the
// Apache License, Version 2.0 (the "License"); you may not use this
// file except in compliance with the License.  Citrix Systems, Inc.
// reserves all rights not expressly granted by the License.
// You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
// 
// Automatically generated by addcopyright.py at 04/03/2012
package com.cloud.network.as.dao;

import java.util.List;

import javax.ejb.Local;

import com.cloud.network.as.AutoScaleVmGroupPolicyMapVO;
import com.cloud.utils.db.GenericDaoBase;
import com.cloud.utils.db.SearchCriteria;

@Local(value={AutoScaleVmGroupPolicyMapDao.class})
public class AutoScaleVmGroupPolicyMapDaoImpl extends GenericDaoBase<AutoScaleVmGroupPolicyMapVO, Long> implements AutoScaleVmGroupPolicyMapDao {

    @Override
    public void remove(long vmGroupId) {
        SearchCriteria<AutoScaleVmGroupPolicyMapVO> sc = createSearchCriteria();
        sc.addAnd("vmGroupId", SearchCriteria.Op.EQ, vmGroupId);

        expunge(sc);
    }

    @Override
    public void remove(long vmGroupId, List<Long> policyIds, Boolean revoke) {
        SearchCriteria<AutoScaleVmGroupPolicyMapVO> sc = createSearchCriteria();
        sc.addAnd("vmGroupId", SearchCriteria.Op.EQ, vmGroupId);
        sc.addAnd("policyId", SearchCriteria.Op.IN, policyIds.toArray());
        if (revoke != null) {
            sc.addAnd("revoke", SearchCriteria.Op.EQ, revoke);
        }

        expunge(sc);
    }

    @Override
    public List<AutoScaleVmGroupPolicyMapVO> listByVmGroupId(long vmGroupId) {
        SearchCriteria<AutoScaleVmGroupPolicyMapVO> sc = createSearchCriteria();
        sc.addAnd("vmGroupId", SearchCriteria.Op.EQ, vmGroupId);
        return listBy(sc);
    }

    @Override
    public AutoScaleVmGroupPolicyMapVO findByVmGroupIdAndPolicyId(long vmGroupId, long policyId) {
        SearchCriteria<AutoScaleVmGroupPolicyMapVO> sc = createSearchCriteria();
        sc.addAnd("vmGroupId", SearchCriteria.Op.EQ, vmGroupId);
        sc.addAnd("policyId", SearchCriteria.Op.EQ, policyId);
        return findOneBy(sc);
    }


    @Override
    public List<AutoScaleVmGroupPolicyMapVO> listByPolicyId(long policyId) {
        SearchCriteria<AutoScaleVmGroupPolicyMapVO> sc = createSearchCriteria();
        sc.addAnd("policyId", SearchCriteria.Op.EQ, policyId);

        return listBy(sc);
    }

//    @Override
//    public List<AutoScaleVmGroupPolicyMapVO> listByVmGroupId(long vmGroupId, boolean revoke) {
//        SearchCriteria<AutoScaleVmGroupPolicyMapVO> sc = createSearchCriteria();
//        sc.addAnd("vmGroupId", SearchCriteria.Op.EQ, vmGroupId);
//        sc.addAnd("revoke", SearchCriteria.Op.EQ, revoke);
//        return listBy(sc);
//    }

}
