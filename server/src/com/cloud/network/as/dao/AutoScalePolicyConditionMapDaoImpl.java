// Copyright 2012 Citrix Systems, Inc. Licensed under the
// Apache License, Version 2.0 (the "License"); you may not use this
// file except in compliance with the License.  Citrix Systems, Inc.
// reserves all rights not expressly granted by the License.
// You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
// 
// Automatically generated by addcopyright.py at 04/03/2012
package com.cloud.network.as.dao;

import java.util.List;

import javax.ejb.Local;

import com.cloud.network.as.AutoScalePolicyConditionMapVO;
import com.cloud.utils.db.GenericDaoBase;
import com.cloud.utils.db.SearchCriteria;

@Local(value = { AutoScalePolicyConditionMapDao.class })
public class AutoScalePolicyConditionMapDaoImpl extends GenericDaoBase<AutoScalePolicyConditionMapVO, Long> implements AutoScalePolicyConditionMapDao {

    @Override
    public List<AutoScalePolicyConditionMapVO> listByAll(Long policyId, List<Long> conditionIds) {
        SearchCriteria<AutoScalePolicyConditionMapVO> sc = createSearchCriteria();

        if (policyId != null)
            sc.addAnd("policyId", SearchCriteria.Op.EQ, policyId);

        if (conditionIds != null)
            sc.addAnd("conditionId", SearchCriteria.Op.IN, conditionIds.toArray());

        return listBy(sc);
    }

    @Override
    public AutoScalePolicyConditionMapVO findByPolicyIdAndConditionId(Long policyId, Long conditionId) {
        SearchCriteria<AutoScalePolicyConditionMapVO> sc = createSearchCriteria();
        sc.addAnd("policyId", SearchCriteria.Op.EQ, policyId);
        sc.addAnd("conditionId", SearchCriteria.Op.EQ, conditionId);
        return findOneBy(sc);
    }

    @Override
    public AutoScalePolicyConditionMapVO findByConditionId(Long conditionId) {
        SearchCriteria<AutoScalePolicyConditionMapVO> sc = createSearchCriteria();
        sc.addAnd("conditionId", SearchCriteria.Op.EQ, conditionId);
        return findOneBy(sc);
    }

}
